using System.Collections;using System.Collections.Generic;using UnityEngine;public class AudioManager : MonoBehaviour {    public enum AudioChannel { Master, Music, SFX};    public float masterVolumePercent = 1;    public float musicVolumePercent = 1;    public float sfxVolumePercent = 1;    int activeMusicSourceIndex;    AudioSource[] musicSources;    AudioSource sfxSource;    public static AudioManager instance;    SoundLibrary library;    public Transform playerT;    Transform audioListener;    void Awake()    {        instance = this;        DontDestroyOnLoad(gameObject);        library = GetComponent<SoundLibrary>();        musicSources = new AudioSource[2];        for (int i = 0; i < 2; i++)        {            GameObject newMusicSource = new GameObject("Music Source " + (i + 1));            musicSources[i] = newMusicSource.AddComponent<AudioSource>();            newMusicSource.transform.parent = transform;                    }            GameObject newSfxSource = new GameObject("SFX Source");            sfxSource = newSfxSource.AddComponent<AudioSource>();            newSfxSource.transform.parent = transform;            audioListener = FindObjectOfType<AudioListener>().transform;    }    void Update()    {        if(playerT != null)        {            audioListener.position = playerT.position;        }            }    public void SetVolume(float volumePercent, AudioChannel channel)    {        switch (channel)        {            case AudioChannel.Master:                masterVolumePercent = volumePercent;                break;            case AudioChannel.Music:                musicVolumePercent = volumePercent;                break;            case AudioChannel.SFX:                sfxVolumePercent = volumePercent;                break;        }        musicSources[0].volume = musicVolumePercent * masterVolumePercent;        musicSources[1].volume = musicVolumePercent * masterVolumePercent;    }    public void PlayMusic(AudioClip clip, float fadeDuration)    {        activeMusicSourceIndex = 1 - activeMusicSourceIndex;        musicSources[activeMusicSourceIndex].clip = clip;        musicSources[activeMusicSourceIndex].Play();        StartCoroutine(MusicCrossFade(fadeDuration));    }    public void PlaySound (AudioClip clip, Vector2 pos)    {        if(clip != null)        {            AudioSource.PlayClipAtPoint(clip, pos, sfxVolumePercent * masterVolumePercent);        }            }    public void PlaySound (string soundName, Vector2 pos)    {        PlaySound(library.GetClipFromName(soundName), pos);    }    public void PlaySound2D(string soundName)    {        sfxSource.PlayOneShot(library.GetClipFromName(soundName), sfxVolumePercent * masterVolumePercent);    }    IEnumerator MusicCrossFade(float duration)    {        float percent = 0;        while (percent < 1)        {            percent += Time.deltaTime * 1 / duration;            musicSources[activeMusicSourceIndex].volume = Mathf.Lerp(0, musicVolumePercent * masterVolumePercent, percent);            musicSources[1-activeMusicSourceIndex].volume = Mathf.Lerp(musicVolumePercent * masterVolumePercent, 0, percent);            yield return null;        }    }	}